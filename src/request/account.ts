import * as crypto from 'crypto';

interface AccountProps {
  /**
   * A unique user ID associated with the end-user in your system. If your
   * system allows the login name for the account to be changed, this should
   * not be the login name for the account, but rather should be an internal ID
   * that does not change. This is not your MaxMind account ID.
   */
  userId?: string;
  /**
   * The username associated with the account. This is not the MD5 of username.
   * Rather, the MD5 is automatically generated from this string.
   */
  username?: string;
}

/**
 * Account related data information for the transaction being sent to the web
 * service.
 */
export default class Account {
  /** @inheritDoc AccountProps.userId */
  public userId?: string;
  /**
   * The username MD5 associated with the account. This MD5 is generated by the
   * `username` passed into the constructor.
   */
  public usernameMd5?: string;

  public constructor(account: AccountProps) {
    this.userId = account.userId;

    if (account.username) {
      this.usernameMd5 = crypto
        .createHash('md5')
        .update(account.username)
        .digest('hex');
    }
  }
}
